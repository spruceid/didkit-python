name: CI/CD

on: [push, pull_request]
on:
  push:
    tags:
      - v*
    branches:
      - 'fix/release-versions'
  pull_request:
    branches:
      - 'main'


jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x64, x86, aarch64]
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --no-sdist
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      #     architecture: x64
      - name: Install built wheel
        run: |
          pip install didkit --no-index --find-links dist --force-reinstall
          python -c "import didkit"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86, aarch64]
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --no-sdist
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      #     architecture: ${{ matrix.target }}
      - name: Install built wheel
        # if: matrix.target == 'x64'
        run: |
          pip install didkit --no-index --find-links dist --force-reinstall
          python -c "import didkit"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686, aarch64, armv7, s390x, ppc64le, ppc64]
    steps:
    - uses: actions/checkout@v2
    - name: Build Wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist
    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: 3.9
    #     architecture: x64
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install didkit --no-index --find-links dist --force-reinstall
        python -c "import didkit"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  # TODO Add pypy

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, linux, windows]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
